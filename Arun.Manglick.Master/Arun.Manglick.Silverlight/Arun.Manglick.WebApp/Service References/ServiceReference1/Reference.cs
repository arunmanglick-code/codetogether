//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arun.Manglick.WebApp.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Customer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomerIDField;
        
        private string CompanyNameField;
        
        private string ContactNameField;
        
        private string ContactTitleField;
        
        private string AddressField;
        
        private string CityField;
        
        private string RegionField;
        
        private string PostalCodeField;
        
        private string CountryField;
        
        private string PhoneField;
        
        private string FaxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ContactTitle {
            get {
                return this.ContactTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleField, value) != true)) {
                    this.ContactTitleField = value;
                    this.RaisePropertyChanged("ContactTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.ServiceModel.ServiceContractAttribute()]
    public interface IAMService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAMService/GetCustomerByContactName", ReplyAction="http://tempuri.org/IAMService/GetCustomerByContactNameResponse")]
        System.IAsyncResult BeginGetCustomerByContactName(string lastName, System.AsyncCallback callback, object asyncState);
        
        Arun.Manglick.WebApp.ServiceReference1.Customer[] EndGetCustomerByContactName(System.IAsyncResult result);
    }
    
    public interface IAMServiceChannel : Arun.Manglick.WebApp.ServiceReference1.IAMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetCustomerByContactNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerByContactNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Arun.Manglick.WebApp.ServiceReference1.Customer[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Arun.Manglick.WebApp.ServiceReference1.Customer[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class AMServiceClient : System.ServiceModel.ClientBase<Arun.Manglick.WebApp.ServiceReference1.IAMService>, Arun.Manglick.WebApp.ServiceReference1.IAMService {
        
        private BeginOperationDelegate onBeginGetCustomerByContactNameDelegate;
        
        private EndOperationDelegate onEndGetCustomerByContactNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerByContactNameCompletedDelegate;
        
        private static System.ServiceModel.Channels.Binding defaultBinding;
        
        private static System.ServiceModel.EndpointAddress defaultAddress;
        
        public AMServiceClient() : 
                this(defaultBinding, defaultAddress) {
        }
        
        public AMServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCustomerByContactNameCompletedEventArgs> GetCustomerByContactNameCompleted;
        
        System.IAsyncResult Arun.Manglick.WebApp.ServiceReference1.IAMService.BeginGetCustomerByContactName(string lastName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerByContactName(lastName, callback, asyncState);
        }
        
        Arun.Manglick.WebApp.ServiceReference1.Customer[] Arun.Manglick.WebApp.ServiceReference1.IAMService.EndGetCustomerByContactName(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerByContactName(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerByContactName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lastName = ((string)(inValues[0]));
            return ((Arun.Manglick.WebApp.ServiceReference1.IAMService)(this)).BeginGetCustomerByContactName(lastName, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerByContactName(System.IAsyncResult result) {
            Arun.Manglick.WebApp.ServiceReference1.Customer[] retVal = ((Arun.Manglick.WebApp.ServiceReference1.IAMService)(this)).EndGetCustomerByContactName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerByContactNameCompleted(object state) {
            if ((this.GetCustomerByContactNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerByContactNameCompleted(this, new GetCustomerByContactNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerByContactNameAsync(string lastName) {
            this.GetCustomerByContactNameAsync(lastName, null);
        }
        
        public void GetCustomerByContactNameAsync(string lastName, object userState) {
            if ((this.onBeginGetCustomerByContactNameDelegate == null)) {
                this.onBeginGetCustomerByContactNameDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerByContactName);
            }
            if ((this.onEndGetCustomerByContactNameDelegate == null)) {
                this.onEndGetCustomerByContactNameDelegate = new EndOperationDelegate(this.OnEndGetCustomerByContactName);
            }
            if ((this.onGetCustomerByContactNameCompletedDelegate == null)) {
                this.onGetCustomerByContactNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerByContactNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerByContactNameDelegate, new object[] {
                        lastName}, this.onEndGetCustomerByContactNameDelegate, this.onGetCustomerByContactNameCompletedDelegate, userState);
        }
        
        protected override Arun.Manglick.WebApp.ServiceReference1.IAMService CreateChannel() {
            return new AMServiceClientChannel(this);
        }
        
        private class AMServiceClientChannel : ChannelBase<Arun.Manglick.WebApp.ServiceReference1.IAMService>, Arun.Manglick.WebApp.ServiceReference1.IAMService {
            
            public AMServiceClientChannel(System.ServiceModel.ClientBase<Arun.Manglick.WebApp.ServiceReference1.IAMService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCustomerByContactName(string lastName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lastName;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerByContactName", _args, callback, asyncState);
                return _result;
            }
            
            public Arun.Manglick.WebApp.ServiceReference1.Customer[] EndGetCustomerByContactName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Arun.Manglick.WebApp.ServiceReference1.Customer[] _result = ((Arun.Manglick.WebApp.ServiceReference1.Customer[])(base.EndInvoke("GetCustomerByContactName", _args, result)));
                return _result;
            }
        }
    }
}
