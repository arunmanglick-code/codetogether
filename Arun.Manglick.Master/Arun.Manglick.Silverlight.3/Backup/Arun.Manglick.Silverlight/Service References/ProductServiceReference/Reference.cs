//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace Arun.Manglick.Silverlight.ProductServiceReference {
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://Arun.Manglick.SL3.BL")]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {

        private int ProductIdField;
        private string ModelNumberField;
        private string ModelNameField;
        private double UnitCostField;
        private string DescriptionField;
        private List<MyProduct> ProductListField;
        private bool MySelectedField = false;
        

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId
        {
            get
            {
                return this.ProductIdField;
            }
            set
            {
                if (value < 0)
                {
                    throw new ArgumentException("Can't be less than 0.");
                }
                else
                {
                    if ((this.ProductIdField.Equals(value) != true))
                    {
                        this.ProductIdField = value;
                        this.RaisePropertyChanged("ProductId");
                    }
                }
            }
        }

        [Display(Name = "Model Number", Description = "This is the retail product Model Number.")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelNumber
        {
            get
            {
                return this.ModelNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ModelNumberField, value) != true))
                {
                    this.ModelNumberField = value;
                    this.RaisePropertyChanged("ModelNumber");
                }
            }
        }

        [StringLength(3, ErrorMessage = "Max Length cap is 3")]
        [Display(Name = "Model Name", Description = "This is the retail product name.")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelName
        {
            get
            {
                return this.ModelNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true))
                {
                    ValidationContext context = new ValidationContext(this, null, null);
                    context.MemberName = "ModelName";
                    Validator.ValidateProperty(value, context);

                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitCost
        {
            get
            {
                return this.UnitCostField;
            }
            set
            {
                if (value < 0)
                {
                    throw new ArgumentException("Can't be less than 0.");
                }
                else
                {
                    if ((this.UnitCostField.Equals(value) != true))
                    {
                        this.UnitCostField = value;
                        this.RaisePropertyChanged("UnitCost");
                    }
                }
            }
        }        

        [CustomValidation(typeof(Custom_Annotation.ProductAnnotation), "ValidateProductDescriptionLength")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {

                if ((object.ReferenceEquals(this.DescriptionField, value) != true))
                {
                    ValidationContext context = new ValidationContext(this, null, null);
                    context.MemberName = "Description";
                    Validator.ValidateProperty(value, context);

                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }


        [System.Runtime.Serialization.DataMemberAttribute()]
        public List<MyProduct> ProductList
        {
            get
            {
                return new List<MyProduct>{
                    new MyProduct{MyProductId=1,MyModelNumber="TDG"},
                    new MyProduct{MyProductId=2,MyModelNumber="TCS"},
                    new MyProduct{MyProductId=3,MyModelNumber="IBM"},
                };
            }
            set
            {
                this.ProductListField = value;
                this.RaisePropertyChanged("ProductList");
                if (!MySelected)
                {
                    throw new ArgumentException("Please Select");
                }
                //throw new ArgumentException("Can't be less than 0.");
                //if (value < 0)
                //{
                //    throw new ArgumentException("Can't be less than 0.");
                //}
                //else
                //{
                //    if ((this.UnitCostField.Equals(value) != true))
                //    {
                //        this.UnitCostField = value;
                //        this.RaisePropertyChanged("UnitCost");
                //    }
                //}
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MySelected
        {
            get
            {
                return MySelectedField;
            }
            set
            {
                if (value == false)
                {
                    throw new ArgumentException("Can't be less than 0.");
                }
                else
                {
                    this.MySelectedField = value;
                    this.RaisePropertyChanged("MySelected");
                }               
            }
        }   

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ArunManglick.Silverlight3.com/ProductSvc", ConfigurationName="ProductServiceReference.IProductSvc")]
    public interface IProductSvc {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.ArunManglick.Silverlight3.com/ProductSvc/IProductSvc/GetAllProducts", ReplyAction="http://www.ArunManglick.Silverlight3.com/ProductSvc/IProductSvc/GetAllProductsRes" +
            "ponse")]
        System.IAsyncResult BeginGetAllProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product> EndGetAllProducts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IProductSvcChannel : Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProductSvcClient : System.ServiceModel.ClientBase<Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc>, Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc {
        
        private BeginOperationDelegate onBeginGetAllProductsDelegate;
        
        private EndOperationDelegate onEndGetAllProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProductSvcClient() {
        }
        
        public ProductSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAllProductsCompletedEventArgs> GetAllProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc.BeginGetAllProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product> Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc.EndGetAllProducts(System.IAsyncResult result) {
            return base.Channel.EndGetAllProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc)(this)).BeginGetAllProducts(callback, asyncState);
        }
        
        private object[] OnEndGetAllProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product> retVal = ((Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc)(this)).EndGetAllProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProductsCompleted(object state) {
            if ((this.GetAllProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProductsCompleted(this, new GetAllProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProductsAsync() {
            this.GetAllProductsAsync(null);
        }
        
        public void GetAllProductsAsync(object userState) {
            if ((this.onBeginGetAllProductsDelegate == null)) {
                this.onBeginGetAllProductsDelegate = new BeginOperationDelegate(this.OnBeginGetAllProducts);
            }
            if ((this.onEndGetAllProductsDelegate == null)) {
                this.onEndGetAllProductsDelegate = new EndOperationDelegate(this.OnEndGetAllProducts);
            }
            if ((this.onGetAllProductsCompletedDelegate == null)) {
                this.onGetAllProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProductsDelegate, null, this.onEndGetAllProductsDelegate, this.onGetAllProductsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc CreateChannel() {
            return new ProductSvcClientChannel(this);
        }
        
        private class ProductSvcClientChannel : ChannelBase<Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc>, Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc {
            
            public ProductSvcClientChannel(System.ServiceModel.ClientBase<Arun.Manglick.Silverlight.ProductServiceReference.IProductSvc> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAllProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product> EndGetAllProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product> _result = ((System.Collections.ObjectModel.ObservableCollection<Arun.Manglick.Silverlight.ProductServiceReference.Product>)(base.EndInvoke("GetAllProducts", _args, result)));
                return _result;
            }
        }
    }

    public class MyProduct : System.ComponentModel.INotifyPropertyChanged
    {
        private int MyProductIdField;
        private string MyModelNumberField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MyProductId
        {
            get
            {
                return this.MyProductIdField;
            }
            set
            {
                if (value < 0)
                {
                    throw new ArgumentException("Can't be less than 0.");
                }
                else
                {
                    if ((this.MyProductIdField.Equals(value) != true))
                    {
                        this.MyProductIdField = value;
                        this.RaisePropertyChanged("MyProductId");
                    }
                }
            }
        }

        [Display(Name = "My Model Number", Description = "This is the retail product Model Number.")]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MyModelNumber
        {
            get
            {
                return this.MyModelNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MyModelNumberField, value) != true))
                {
                    this.MyModelNumberField = value;
                    this.RaisePropertyChanged("MyModelNumber");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
